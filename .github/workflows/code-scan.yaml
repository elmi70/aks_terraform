name: 'Security Scan'

on:
  pull_request:
    paths:
      - 'tf/**'
  push:
    branches: [ "main" ]
    paths:
      - 'tf/**'
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read
  security-events: write  # Needed to upload security results
  pull-requests: write  # To comment on PRs

jobs:
  security-scan:
    name: 'Scan Terraform Code'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Run Checkov scan
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: ./tf
        framework: terraform
        output_format: cli,sarif,junitxml
        output_file_path: checkov-results.sarif,checkov-results.xml
        soft_fail: true

    - name: Upload SARIF results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: success() || failure()
      with:
        sarif_file: checkov-results.sarif

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: success() || failure()
      with:
        files: checkov-results.xml
        check_name: "Security Scan Results"
    
    - name: Comment on PR with Findings
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && (success() || failure())
      env:
        CHECKOV_RESULTS: ${{ steps.checkov.outputs.results }}
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const results = JSON.parse(process.env.CHECKOV_RESULTS);
          const highSeverity = results.summary.failed_checks.filter(check => check.severity === 'HIGH').length;
          const mediumSeverity = results.summary.failed_checks.filter(check => check.severity === 'MEDIUM').length;
          const lowSeverity = results.summary.failed_checks.filter(check => check.severity === 'LOW').length;
          
          const body = `## Security Scan Results
          
          | Severity | Count |
          |----------|-------|
          | ðŸ”´ High | ${highSeverity} |
          | ðŸŸ  Medium | ${mediumSeverity} |
          | ðŸŸ¡ Low | ${lowSeverity} |
          
          [View detailed results in the workflow run](${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID})
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: body
          });

    # Add after the PR comment step
    - name: Generate Workflow Summary
      if: success() || failure()
      env:
        CHECKOV_RESULTS: ${{ steps.checkov.outputs.results }}
      run: |
        echo "# Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        # Parse the JSON results
        HIGH=$(echo '${{ steps.checkov.outputs.results }}' | jq -r '.summary.failed_checks | map(select(.severity == "HIGH")) | length')
        MEDIUM=$(echo '${{ steps.checkov.outputs.results }}' | jq -r '.summary.failed_checks | map(select(.severity == "MEDIUM")) | length')
        LOW=$(echo '${{ steps.checkov.outputs.results }}' | jq -r '.summary.failed_checks | map(select(.severity == "LOW")) | length')
        PASSED=$(echo '${{ steps.checkov.outputs.results }}' | jq -r '.summary.passed_checks | length')
        
        echo "| Category | Count |" >> $GITHUB_STEP_SUMMARY
        echo "|----------|-------|" >> $GITHUB_STEP_SUMMARY
        echo "| ðŸ”´ High Severity Issues | $HIGH |" >> $GITHUB_STEP_SUMMARY
        echo "| ðŸŸ  Medium Severity Issues | $MEDIUM |" >> $GITHUB_STEP_SUMMARY
        echo "| ðŸŸ¡ Low Severity Issues | $LOW |" >> $GITHUB_STEP_SUMMARY
        echo "| âœ… Passed Checks | $PASSED |" >> $GITHUB_STEP_SUMMARY